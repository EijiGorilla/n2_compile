"use strict";(self.webpackChunkn2_compile=self.webpackChunkn2_compile||[]).push([[7661],{57661:(e,t,n)=>{n.d(t,{$A:()=>s,Ml:()=>a,NM:()=>o,i$:()=>i});var r=n(93169),c=n(68401);class o{constructor(e){this.data=e,this.type="encoded-mesh-texture",this.encoding=c.Ti.KTX2_ENCODING}}function s(e){return"encoded-mesh-texture"===e?.type}async function i(e){const t=new Blob([e]),n=await t.text();return JSON.parse(n)}async function a(e,t){if(t===c.Ti.KTX2_ENCODING)return new o(e);const n=new Blob([e],{type:t}),s=URL.createObjectURL(n),i=new Image;if((0,r.Z)("esri-iPhone"))return new Promise(((e,t)=>{const n=()=>{c(),e(i)},r=e=>{c(),t(e)},c=()=>{URL.revokeObjectURL(s),i.removeEventListener("load",n),i.removeEventListener("error",r)};i.addEventListener("load",n),i.addEventListener("error",r),i.src=s}));try{i.src=s,await i.decode()}catch(a){console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(s),i}}}]);
//# sourceMappingURL=7661.cccf7704.chunk.js.map