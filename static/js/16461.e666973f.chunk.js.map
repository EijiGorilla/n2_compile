{"version":3,"file":"static/js/16461.e666973f.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,clipTile as o,mosaic as i,approximateTransform as n,getLocalArithmeticNorthRotations as a}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as m,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as p,estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as S,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as x}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as O}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import N from\"../../geometry/Point.js\";class J{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=S(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=p(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?N.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=u(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}clipTile(r){const t=e.fromJSON(r.pixelBlock),s=o({...r,pixelBlock:t});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=i(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,l=s;return r.coefs&&(l=n(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=a(r.destDimension,r.gcsGrid),l=d(l,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:l?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await O(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||m(t.spatialReference,s.spatialReference,o))&&await c();const i=e.rasterTransform?x(e.rasterTransform):null;return f({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{J as default};\n"],"names":["J","convertVectorFieldData","r","t","e","fromJSON","pixelBlock","s","S","type","Promise","resolve","toJSON","computeStatisticsHistograms","p","decode","data","options","symbolize","extent","h","this","symbolizer","updateSymbolizer","y","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","l","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","N","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","u","split","tileSize","maximumPyramidLevel","useBilinear","forEach","set","clipTile","o","mosaicAndTransform","srcPixelBlocks","i","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","n","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","a","d","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","O","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","m","spatialReference","c","rasterTransform","x","f","datumTransformation"],"sourceRoot":""}