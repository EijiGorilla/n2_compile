/*! For license information please see 90425.016e64e3.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkn2_compile=self.webpackChunkn2_compile||[]).push([[90425],{90425:(e,t,n)=>{n.r(t),n.d(t,{DateEngine:()=>r});class r{constructor(){this._formatterCache=new Map,this._commonDateTimeFormatterOptions={year:"numeric",month:"2-digit",day:"2-digit",timeZoneName:"shortOffset"}}get name(){return"native"}create(e){return new Date(e)}increase(e){return new Date(e.getTime()+864e5)}formatToIsoDateString(e){const t=e.getFullYear(),n=e.getMonth()+1,r=e.getDate();return"".concat(t,"-").concat(n.toString().padStart(2,"0"),"-").concat(r.toString().padStart(2,"0"))}isoToTimeZone(e,t){const n=this._toDate(e),r=this._getFormatter(t).formatToParts(n),[a]=r.filter((e=>{let{type:t}=e;return"timeZoneName"===t})).map((e=>{let{value:t}=e;return t})),i=this._getTimeZoneOffsetInMins(a),o=n.getMinutes()-(n.getTimezoneOffset()-i);return n.setMinutes(o),n}same(e,t){return e.getTime()===t.getTime()}_toDate(e){return new Date(e)}_getFormatter(e){let t=this._formatterCache.get(e);return t||(t=new Intl.DateTimeFormat("en-US",{timeZone:e,...this._commonDateTimeFormatterOptions}),this._formatterCache.set(e,t)),t}_getTimeZoneOffsetInMins(e){const[t,...n]=e.slice(3),[r,a]=n.join("").split(":");return("+"===t?1:-1)*(60*Number(r)+Number(a||0))}}}}]);
//# sourceMappingURL=90425.016e64e3.chunk.js.map