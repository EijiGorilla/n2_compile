{"version":3,"file":"static/js/9911.e0c9056d.chunk.js","mappings":"8ZAoBA,MA0QA,EA1QyBA,KACvB,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,MACtBC,GAAYC,EAAAA,EAAAA,QAAkC,CAAC,GAC/CC,GAAWD,EAAAA,EAAAA,QAAkC,CAAC,GAC9CE,GAAWF,EAAAA,EAAAA,QAAkC,CAAC,GAC9CG,GAAWH,EAAAA,EAAAA,QAAkC,CAAC,IAC7CI,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,IAEjDC,EAAU,eA6OhB,OA5OAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAoBZ,GAAiBa,MAAMC,IACzCN,EAAmBM,EAAO,GAC1B,GACD,CAACd,KAEJW,EAAAA,EAAAA,YAAU,KAAO,IAADI,EAtBQC,IAuBLN,EAtBnBO,EAAAA,GAAeA,EAAAA,GAAaC,cAAc,SAAUC,GAC9CA,EAAKC,IAAIC,KAAOL,GAClBG,EAAKG,SAET,IAmBE,IAAIH,EAAOF,EAAAA,EAASM,IAAIb,GACxBS,EAAKK,UAAUC,SAASC,QACd,QAAVX,EAAAI,EAAKQ,aAAK,IAAAZ,GAAVA,EAAYO,UAIZH,EAAKS,UAAU,CAACC,EAAAA,EAAmBN,IAAIJ,GAAOW,EAAAA,EAAqBP,IAAIJ,KAIvE,IAAIY,EAAQZ,EAAKK,UAAUC,SAASO,KAClCC,EAAAA,EAAcV,IAAIJ,EAAM,CACtBe,MAAM,EACNC,MAAM,EACNC,OAAQ,OACRC,OAAQ,QACRC,cAAe,MAGnBhC,EAASiC,QAAUR,EAGnBA,EAAMN,SAASe,QACbvB,EAAAA,EAAUM,IAAIJ,EAAM,CAClBsB,KAAM,uCACNC,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,KAAM5B,EAAAA,GAAU,WAChB6B,EAAG7B,EAAAA,GAAY,IACf8B,QAAS9B,EAAAA,GAAY,IACrB+B,WAAY,EACZV,cAAe,KAMNP,EAAMkB,IACjB,SACAhB,EAAAA,EAAeV,IAAIJ,EAAM,CACvB+B,SAAU,WAGPC,MAAMF,IAAI,WAAW,GAI5B,IAAIG,EAAQrB,EAAMsB,MAAMrB,KACtBC,EAAAA,EAAeV,IAAIJ,EAAM,CACvBmC,aAAc,EACdC,WAAW,EACXC,aAAc,CACZC,SAAU,MACVC,MAAO,GAETC,eAAgB,CAAC,CAAEF,SAAU,QAASC,MAAO,IAC7CE,SAAU3B,EAAAA,EAAoBV,IAAIJ,EAAM,CACtC0C,gBAAiB,GACjBC,cAAe,EACfC,YAAa,EACbC,OAAQ/C,EAAAA,GAAU,gBAORmC,EAAMa,IAAI,YAChBC,OAAOC,SAASC,OAAO,CAE/BxB,UAAW,SACXC,KAAM5B,EAAAA,GAAU,WAEhByB,SAAU,KAGZ,IAAI2B,EAAQtC,EAAMuC,MAAMtC,KACtBC,EAAAA,EAAgBV,IAAIJ,EAAM,CACxBoD,iBAAiB,EACjBC,IAAK,EACLZ,SAAU3B,EAAAA,EAAoBV,IAAIJ,EAAM,CACtC0C,gBAAiB,GACjBC,cAAe,EACfC,YAAa,EACbC,OAAQ/C,EAAAA,GAAU,gBAKxBoD,EAAMJ,IAAI,YAAYC,OAAOC,SAASC,OAAO,CAE3CxB,UAAW,SACXC,KAAM5B,EAAAA,GAAU,WAEhByB,SAAU,KAEZtC,EAASmC,QAAUa,EACnB/C,EAASkC,QAAU8B,EAGnBA,EAAM5C,SAASe,QACbvB,EAAAA,EAAUM,IAAIJ,EAAM,CAClBsD,UAAW,GACXhC,KAAM,0BACNiC,EAAGzD,EAAAA,GACH8B,QAAS9B,EAAAA,GACT4B,KAAM5B,EAAAA,GAAU,WAChByB,SAAU,MAMd,IAAIiC,EAAS5C,EAAMN,SAASO,KAC1Bf,EAAAA,EAAWM,IAAIJ,EAAM,CACnB4B,QAAS9B,EAAAA,GACT2D,QAAS3D,EAAAA,GAAY,IACrB6B,EAAG7B,EAAAA,GACHyD,EAAGzD,EAAAA,GAAY,QAGnBf,EAAUqC,QAAUoC,EAEpBA,EAAOT,OAAOC,SAASC,OAAO,CAC5BS,kBAAmB,WACnBhC,KAAM5B,EAAAA,GAAU,WAChByB,SAAU,GACVoC,MAAO,KAOT,IA0BIC,EA1BAC,EAASjD,EAAMiD,OAAOhD,KACxBC,EAAAA,EAAmBV,IAAIJ,EAAM,CAC3B8D,KAAM,SACN7B,MAAOA,EACPiB,MAAOA,EACPa,YAAa,QACbC,YAAa,OACbC,cAAe,SAiFnB,OA7EAJ,EAAOK,QAAQrD,MAAK,WAClB,OAAOf,EAAAA,EAAWM,IAAIJ,EAAM,CAC1BmE,UAAW,EACXC,UAAW,GACXC,OAAQvE,EAAAA,EAAUM,IAAIJ,EAAM,CAC1BsB,KAAM,gBACNI,KAAM1B,EAAKsE,gBAAgBxB,IAAI,mBAC/BW,QAAS,EACT7B,QAAS9B,EAAAA,GACTyE,cAAc,EACdhD,SAAU,MAGhB,IAGAsC,EAAOW,QAAQxB,SAASyB,OAAOC,GAAG,SAAUC,IAAQ,IAADC,EACjD,MAAMC,EAAkC,QAArBD,EAAGD,EAAGG,OAAOC,gBAAQ,IAAAH,OAAA,EAAlBA,EAAoBI,YACpCC,GAAeC,EAAAA,EAAAA,IAAWL,EAASM,KAAM,cAIzCC,EAAiB,SAAWvG,EAAkB,IAC9CwG,EACJ,wDAAoEJ,EAAe,IAErF,IAAIK,EAAQC,EAAAA,GAASC,cAEnBF,EAAMG,MADgB,QAApB5G,EACYwG,aAEAA,EAAQ,QAAUD,EAGlCM,EAAAA,GAAKC,cAAcJ,EAAAA,IAAU7F,MAAMkG,IACjCL,EAAAA,GAASM,cAAcP,GAAO5F,MAAMoG,IAClC,MACMC,EADgBD,EAAQE,SACFC,OAE5B,IAAIC,EAAQ,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,IAAIC,EAAMN,EAAQE,SAASG,GAAGE,WAAWC,SACzCJ,EAAMrF,KAAKuF,EACb,CAEA,IAAIG,EAAW,IAAIC,EAAAA,EAAM,CACvBC,UAAWP,IAGbX,EAAAA,GAASmB,YAAYH,GAAU7G,MAAK,SAAUC,GACxCA,EAAOgH,QACTjB,EAAAA,GAAKkB,KAAKjH,EAAOgH,OAErB,IAEI/C,GACFA,EAAgBiD,SAElBjD,EAAkBgC,EAAUkB,UAAUZ,GAEtCR,EAAAA,GAAKhB,GAAG,SAAS,WACfkB,EAAUmB,OAAS,IAAIC,EAAAA,EAAc,CACnCvB,WAAOwB,IAETrD,EAAgBiD,QAClB,GAAE,GACF,GACF,IAEJhD,EAAOW,QAAQxB,SAASC,OAAO,CAC7BiE,YAAa,kBACbC,SAAUrH,EAAAA,GAAY,IACtB6C,cAAe,IAEjBkB,EAAOuD,KAAKnE,OAAO7D,GAEnBwB,EAAMyG,OAAO,IAAM,KAEZ,KACLrH,EAAKG,SAAS,CACf,GACA,CAACZ,EAASH,KAGXkI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAjH,UACEgH,EAAAA,EAAAA,KAAA,OACEpH,GAAIX,EACJiI,MAAO,CACLC,OAAQ,OACRC,MAAO,MACPC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,WACVC,OAAQ,GACRC,OAAQ,GACRC,WAAY,MACZC,YAAa,OACbC,OAAQ,uBAGX,C","sources":["components/LotProgressChart.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { dateFormat, generateLotProgress } from '../Query';\r\nimport { lotLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport { useContractPackageContext } from './ContractPackageContext';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\nconst LotProgressChart = () => {\r\n  const { cpValueSelected } = useContractPackageContext();\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const xAxisRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotProgressData, setLotProgressData] = useState([]);\r\n\r\n  const chartID = 'lot-progress';\r\n  useEffect(() => {\r\n    generateLotProgress(cpValueSelected).then((result: any) => {\r\n      setLotProgressData(result);\r\n    });\r\n  }, [cpValueSelected]);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panX',\r\n        wheelY: 'zoomX',\r\n        paddingBottom: 35,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Chart title\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Monthly Progress of Handed-Over Lots',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    var cursor = chart.set(\r\n      'cursor',\r\n      am5xy.XYCursor.new(root, {\r\n        behavior: 'zoomX',\r\n      }),\r\n    );\r\n    cursor.lineY.set('visible', false);\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        maxDeviation: 0,\r\n        groupData: true,\r\n        baseInterval: {\r\n          timeUnit: 'day',\r\n          count: 1,\r\n        },\r\n        groupIntervals: [{ timeUnit: 'month', count: 1 }],\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n\r\n        //tooltip: am5.Tooltip.new(root, {})\r\n      }),\r\n    );\r\n\r\n    let xRenderer = xAxis.get('renderer');\r\n    xRenderer.labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        calculateTotals: true,\r\n        min: 0,\r\n        renderer: am5xy.AxisRendererY.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",//\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n    xAxisRef.current = xAxis;\r\n    yAxisRef.current = yAxis;\r\n\r\n    // Add yaxix title\r\n    yAxis.children.unshift(\r\n      am5.Label.new(root, {\r\n        rotation: -90,\r\n        text: 'No. of handed-over lots',\r\n        y: am5.p50,\r\n        centerX: am5.p50,\r\n        fill: am5.color('#ffffff'),\r\n        fontSize: 11,\r\n      }),\r\n    );\r\n\r\n    // Add legend\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        centerY: am5.percent(50),\r\n        x: am5.p50,\r\n        y: am5.percent(108),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 17,\r\n      scale: 0.8,\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    // Add series\r\n    var series = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: 'Series',\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: 'value',\r\n        valueXField: 'date',\r\n        valueYGrouped: 'sum',\r\n      }),\r\n    );\r\n\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        locationY: 1,\r\n        locationX: 0.5,\r\n        sprite: am5.Label.new(root, {\r\n          text: '{valueYTotal}',\r\n          fill: root.interfaceColors.get('alternativeText'),\r\n          centerY: 0,\r\n          centerX: am5.p50,\r\n          populateText: true,\r\n          fontSize: 10,\r\n        }),\r\n      });\r\n    });\r\n\r\n    var highlightSelect: any;\r\n    series.columns.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const selectedDate = dateFormat(selected.date, 'yyyy-MM-dd');\r\n\r\n      // const qExpression =\r\n      const queryDefault = '1=1';\r\n      const queryContractp = \"CP = '\" + cpValueSelected + \"'\";\r\n      const qDate =\r\n        'HandedOverDate IS NOT NULL' + ' AND ' + \"HandedOverDate = date'\" + selectedDate + \"'\";\r\n\r\n      var query = lotLayer.createQuery();\r\n      if (cpValueSelected === 'All') {\r\n        query.where = qDate + ' AND ' + queryDefault;\r\n      } else {\r\n        query.where = qDate + ' AND ' + queryContractp;\r\n      }\r\n\r\n      view.whenLayerView(lotLayer).then((layerView: any) => {\r\n        lotLayer.queryFeatures(query).then((results: any) => {\r\n          const RESULT_LENGTH = results.features;\r\n          const ROW_N = RESULT_LENGTH.length;\r\n\r\n          let objID = [];\r\n          for (var i = 0; i < ROW_N; i++) {\r\n            var obj = results.features[i].attributes.OBJECTID;\r\n            objID.push(obj);\r\n          }\r\n\r\n          var queryExt = new Query({\r\n            objectIds: objID,\r\n          });\r\n\r\n          lotLayer.queryExtent(queryExt).then(function (result) {\r\n            if (result.extent) {\r\n              view.goTo(result.extent);\r\n            }\r\n          });\r\n\r\n          if (highlightSelect) {\r\n            highlightSelect.remove();\r\n          }\r\n          highlightSelect = layerView.highlight(objID);\r\n\r\n          view.on('click', function () {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect.remove();\r\n          });\r\n        });\r\n      }); // End of whenLayerView\r\n    });\r\n    series.columns.template.setAll({\r\n      tooltipText: 'Total: {valueY}',\r\n      tooltipY: am5.percent(10),\r\n      strokeOpacity: 0,\r\n    });\r\n    series.data.setAll(lotProgressData);\r\n\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotProgressData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '32vh',\r\n          width: '67%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n          border: 'solid 0.1px gray',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LotProgressChart;\r\n"],"names":["LotProgressChart","cpValueSelected","useContractPackageContext","legendRef","useRef","xAxisRef","yAxisRef","chartRef","lotProgressData","setLotProgressData","useState","chartID","useEffect","generateLotProgress","then","result","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","wheelX","wheelY","paddingBottom","current","unshift","text","fontSize","fontWeight","textAlign","fill","x","centerX","paddingTop","set","behavior","lineY","xAxis","xAxes","maxDeviation","groupData","baseInterval","timeUnit","count","groupIntervals","renderer","minGridDistance","strokeOpacity","strokeWidth","stroke","get","labels","template","setAll","yAxis","yAxes","calculateTotals","min","rotation","y","legend","centerY","oversizedBehavior","scale","highlightSelect","series","name","valueYField","valueXField","valueYGrouped","bullets","locationY","locationX","sprite","interfaceColors","populateText","columns","events","on","ev","_ev$target$dataItem","selected","target","dataItem","dataContext","selectedDate","dateFormat","date","queryContractp","qDate","query","lotLayer","createQuery","where","view","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","undefined","tooltipText","tooltipY","data","appear","_jsx","_Fragment","style","height","width","backgroundColor","color","position","zIndex","bottom","marginLeft","marginRight","border"],"sourceRoot":""}