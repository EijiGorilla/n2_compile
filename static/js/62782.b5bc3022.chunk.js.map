{"version":3,"file":"static/js/62782.b5bc3022.chunk.js","mappings":"iRAI0jB,IAAIA,EAAE,cAAcC,EAAAA,EAAEC,WAAAA,CAAYC,GAAGC,MAAMD,GAAGE,KAAKC,gBAAe,CAAE,CAACC,UAAAA,IAAaC,EAAAA,EAAAA,KAAG,IAAIH,KAAKI,UAAUN,GAAGE,KAAKK,KAAKC,eAAeC,mBAAmBT,GAAGU,EAAAA,GAAE,CAACC,QAAAA,GAAW,MAAMX,EAAE,MAAME,KAAKK,KAAKC,eAAeI,iBAAiBV,KAAKK,KAAKC,eAAeI,iBAAiB,KAAK,OAAOV,KAAKK,KAAKC,eAAeK,KAAKC,mBAAmBC,KAAKV,IAAC,IAAOA,EAAEW,SAASC,EAAAA,EAAEC,YAAWC,EAAAA,EAAAA,IAAEd,EAAEe,OAAOpB,OAAO,GAAGH,GAAEG,EAAAA,EAAAA,GAAE,EAACqB,EAAAA,EAAAA,GAAE,2DAA2DxB,E,mPCA3J,MAAMyB,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,IAAIC,EAAE,cAAcF,EAAAA,EAAEtB,WAAAA,CAAYC,GAAGC,MAAMD,GAAGE,KAAKsB,UAAS,EAAGtB,KAAKC,gBAAe,EAAGD,KAAKuB,cAAa,EAAGvB,KAAKwB,UAAU,IAAIC,IAAIzB,KAAK0B,QAAQ,IAAID,IAAIzB,KAAK2B,UAAS,CAAE,CAACzB,UAAAA,GAAaF,KAAK4B,SAASR,EAAEP,KAAKf,GAAG,IAAIH,EAAAA,EAAE,CAACkC,MAAM,CAAC/B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAG,IAAIgC,QAAQ,CAACD,MAAM,QAAQE,MAAM,OAAO/B,KAAKgC,QAAQ,CAACC,OAAAA,GAAUjC,KAAK2B,UAAS,EAAG3B,KAAKkC,OAAO,CAAC,WAAI9B,GAAU,OAAOJ,KAAK2B,QAAQ,CAAC,WAAIvB,CAAQN,GAAGE,KAAK2B,WAAW7B,IAAIE,KAAK2B,SAAS7B,EAAEE,KAAKgC,SAAS,CAACA,MAAAA,GAAS,IAAIhC,KAAK2B,SAAS,YAAY3B,KAAKkC,QAAQ,MAA+Hf,EAAEnB,KAAKS,WAAWb,EAAE,IAAIuC,MAAMC,EAAE,IAAIC,KAAKrC,KAAK0B,QAAQY,KAAKtC,KAAK0B,QAAQa,SAASpB,EAAEqB,SAAS,CAAC7C,EAAEyB,KAAK,MAAMC,EAAE1B,EAAE8C,IAAIC,WAAWN,EAAEO,OAAOtB,GAAG,MAAMuB,EAAEjD,EAAE8C,IAAI,GAAGI,EAAElD,EAAEmB,SAAS,GAAGd,KAAKC,iBAAiBD,KAAKwB,UAAUsB,IAAIzB,GAAG,CAAC,MAAMvB,EAAE,IAAImB,EAAAA,EAAE,CAACH,SAAS+B,EAAEE,OAAO/C,KAAK4B,SAASgB,EAAE5C,KAAK4B,SAASoB,UAAUhD,KAAKwB,UAAUyB,IAAI5B,EAAEvB,GAAGF,EAAEsD,KAAKpD,EAAE,CAAC,GAAGE,KAAKuB,aAAa,CAAC,MAAMa,EAArdtC,KAAI,GAAG,MAAMA,EAAEqD,MAAM,OAAOrD,EAAEqD,MAAM,IAAI3C,EAAEV,EAAE2C,IAAIC,WAAW,OAAO,MAAM5C,EAAEsD,eAAe5C,GAAI,KAAIV,EAAEsD,iBAAiB5C,CAAC,EAAkWV,CAAEH,GAAGiD,EAAExB,GAAGD,EAAE6B,OAAO,GAAGK,GAAElD,EAAAA,EAAAA,IAAE,EAAE,IAAIyC,GAAGU,GAAEnD,EAAAA,EAAAA,IAAE,GAAG,EAAEyC,GAAG,IAAIW,EAAE,MAAM5D,EAAEyD,cAAczD,EAAEyD,cAAcjC,EAAE6B,OAAOQ,EAAE,IAAIhD,EAAAA,EAAE,CAAC6C,EAAEE,EAAE,EAAEF,EAAEE,EAAE,EAAEF,IAAII,EAAE,OAAOzD,KAAKK,KAAKqD,KAAK,IAAI,IAAI3C,EAAAA,EAAE,CAAC4C,eAAe,IAAIC,EAAAA,EAAE,CAACC,aAAa,GAAG,MAAMC,QAAQ,IAAIC,EAAAA,EAAE,CAAClC,MAAM,IAAIrB,EAAAA,EAAE,SAASwD,OAAO,IAAIC,EAAAA,EAAE,CAACpC,MAAM,IAAIrB,EAAAA,EAAE,aAAa0D,aAAa,IAAIC,EAAAA,EAAE,CAAC,IAAIC,EAAAA,EAAE,CAACC,KAAKjC,EAAEkC,KAAK,CAACzC,MAAM,QAAQS,KAAK,EAAE,KAAKiC,SAAS,CAAC1C,MAAM2B,GAAGlB,KAAKgB,QAAQ,IAAI,IAAIkB,EAAAA,EAAE,CAACH,KAAKjC,EAAEqC,UAAU,QAAQC,SAAS,EAAE,IAAI7C,MAAM2B,EAAElB,KAAKgB,IAAIqB,EAAE3E,KAAK0B,QAAQkD,IAAIvD,GAAG,GAAGsD,EAAE,CAAC,MAAM7E,EAAE2D,IAAI,MAAMkB,EAAE5B,QAAQ8B,KAAKC,UAAUhF,KAAK+E,KAAKC,UAAUH,EAAE5B,UAAU4B,EAAE5B,OAAOjD,EAAE,KAAK,CAAC,MAAMA,EAAE,IAAImB,EAAAA,EAAE,CAACH,SAAS+B,EAAE3B,OAAO6D,OAAOhC,OAAOU,MAAMzD,KAAK0B,QAAQuB,IAAI5B,EAAEvB,GAAGF,EAAEsD,KAAKpD,EAAE,CAAC,KAAK,MAAMH,EAAE,IAAIwC,MAAMC,EAAEI,SAAS1C,IAAI,MAAMU,EAAER,KAAKwB,UAAUoD,IAAI9E,GAAG,MAAMU,IAAIb,EAAEuD,KAAK1C,GAAGR,KAAKwB,UAAUmB,OAAO7C,IAAI,MAAMmB,EAAEjB,KAAK0B,QAAQkD,IAAI9E,GAAG,MAAMmB,IAAItB,EAAEuD,KAAKjC,GAAGjB,KAAK0B,QAAQiB,OAAO7C,GAAG,IAAIE,KAAKK,KAAK2E,SAASC,WAAWtF,GAAGK,KAAKK,KAAK2E,SAASE,QAAQtF,EAAE,CAACsC,KAAAA,GAAQlC,KAAKK,KAAK2E,SAASC,WAAW9C,MAAMgD,KAAKnF,KAAKwB,UAAU4D,WAAWpF,KAAKK,KAAK2E,SAASC,WAAW9C,MAAMgD,KAAKnF,KAAK0B,QAAQ0D,WAAWpF,KAAKwB,UAAUU,QAAQlC,KAAK0B,QAAQQ,OAAO,IAAGpC,EAAAA,EAAAA,GAAE,EAACF,EAAAA,EAAAA,IAAE,CAACyF,eAAc,KAAMhE,EAAEiE,UAAU,YAAO,IAAQxF,EAAAA,EAAAA,GAAE,EAACF,EAAAA,EAAAA,IAAE,CAAC2F,UAAS,KAAMlE,EAAEiE,UAAU,gBAAW,IAAQxF,EAAAA,EAAAA,GAAE,EAACF,EAAAA,EAAAA,OAAKyB,EAAEiE,UAAU,UAAU,MAAMjE,GAAEvB,EAAAA,EAAAA,GAAE,EAACsC,EAAAA,EAAAA,GAAE,wCAAwCf,E","sources":["../node_modules/@arcgis/core/views/3d/layers/support/TerrainTileTree3DDebugger.js","../node_modules/@arcgis/core/views/support/TileTreeDebugger.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import\"../../../../geometry.js\";import{watch as r,initial as s}from\"../../../../core/reactiveUtils.js\";import\"../../../../core/Logger.js\";import\"../../../../core/has.js\";import\"../../../../core/RandomLCG.js\";import\"../../../../core/Error.js\";import{subclass as t}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{toExtent as o}from\"../../../../geometry/support/aaBoundingRect.js\";import{TileTreeDebugger as i}from\"../../../support/TileTreeDebugger.js\";import a from\"../../../../geometry/Polygon.js\";let m=class extends i{constructor(e){super(e),this.enablePolygons=!1}initialize(){r((()=>this.enabled),(e=>this.view.basemapTerrain.renderPatchBorders=e),s)}getTiles(){const e=null!=this.view.basemapTerrain.spatialReference?this.view.basemapTerrain.spatialReference:null;return this.view.basemapTerrain.test.getRenderedTiles().map((r=>({...r,geometry:a.fromExtent(o(r.extent,e))})))}};m=e([t(\"esri.views.3d.layers.support.TerrainTileTree3DDebugger\")],m);export{m as TerrainTileTree3DDebugger};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import s from\"../../Color.js\";import o from\"../../Graphic.js\";import\"../../symbols.js\";import t from\"../../core/Accessor.js\";import l from\"../../core/Collection.js\";import{lerp as r}from\"../../core/mathUtils.js\";import{property as i}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/Logger.js\";import\"../../core/RandomLCG.js\";import{subclass as n}from\"../../core/accessorSupport/decorators/subclass.js\";import a from\"../../symbols/PointSymbol3D.js\";import m from\"../../symbols/SimpleFillSymbol.js\";import h from\"../../symbols/TextSymbol.js\";import c from\"../../symbols/TextSymbol3DLayer.js\";import p from\"../../symbols/support/Symbol3DVerticalOffset.js\";import y from\"../../symbols/callouts/LineCallout3D.js\";import b from\"../../symbols/callouts/LineCallout3DBorder.js\";const u=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let d=class extends t{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=u.map((e=>new m({color:[e[0],e[1],e[2],.6],outline:{color:\"black\",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=e=>{if(null!=e.label)return e.label;let s=e.lij.toString();return null!=e.loadPriority&&(s+=` (${e.loadPriority})`),s},t=this.getTiles(),i=new Array,n=new Set((this._labels.size,this._labels.keys()));t.forEach(((m,u)=>{const d=m.lij.toString();n.delete(d);const g=m.lij[0],f=m.geometry;if(this.enablePolygons&&!this._polygons.has(d)){const e=new o({geometry:f,symbol:this._symbols[g%this._symbols.length]});this._polygons.set(d,e),i.push(e)}if(this.enableLabels){const n=e(m),g=u/(t.length-1),w=r(0,200,g),_=r(20,6,g)/.75,j=null!=m.loadPriority&&m.loadPriority>=t.length,v=new s([w,j?0:w,j?0:w]),S=\"3d\"===this.view.type?()=>new a({verticalOffset:new p({screenLength:40/.75}),callout:new y({color:new s(\"white\"),border:new b({color:new s(\"black\")})}),symbolLayers:new l([new c({text:n,halo:{color:\"white\",size:1/.75},material:{color:v},size:_})])}):()=>new h({text:n,haloColor:\"white\",haloSize:1/.75,color:v,size:_}),L=this._labels.get(d);if(L){const e=S();null!=L.symbol&&JSON.stringify(e)===JSON.stringify(L.symbol)||(L.symbol=e)}else{const e=new o({geometry:f.extent.center,symbol:S()});this._labels.set(d,e),i.push(e)}}}));const m=new Array;n.forEach((e=>{const s=this._polygons.get(e);null!=s&&(m.push(s),this._polygons.delete(e));const o=this._labels.get(e);null!=o&&(m.push(o),this._labels.delete(e))})),this.view.graphics.removeMany(m),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};e([i({constructOnly:!0})],d.prototype,\"view\",void 0),e([i({readOnly:!0})],d.prototype,\"updating\",void 0),e([i()],d.prototype,\"enabled\",null),d=e([n(\"esri.views.support.TileTreeDebugger\")],d);export{d as TileTreeDebugger};\n"],"names":["m","i","constructor","e","super","this","enablePolygons","initialize","r","enabled","view","basemapTerrain","renderPatchBorders","s","getTiles","spatialReference","test","getRenderedTiles","map","geometry","a","fromExtent","o","extent","t","u","d","updating","enableLabels","_polygons","Map","_labels","_enabled","_symbols","color","outline","width","update","destroy","clear","Array","n","Set","size","keys","forEach","lij","toString","delete","g","f","has","symbol","length","set","push","label","loadPriority","w","_","j","v","S","type","verticalOffset","p","screenLength","callout","y","border","b","symbolLayers","l","c","text","halo","material","h","haloColor","haloSize","L","get","JSON","stringify","center","graphics","removeMany","addMany","from","values","constructOnly","prototype","readOnly"],"sourceRoot":""}