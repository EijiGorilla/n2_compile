{"version":3,"file":"static/js/67165.6ef9b378.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/ElevationTile.js","../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:s,dx:r,dy:n,y1:i,x0:u}=this._samplerData,{width:o,values:m,noDataValue:h}=s,p=l(n*(i-t),0,e),D=l(r*(a-u),0,e),d=Math.floor(p),f=Math.floor(D),_=d*o+f,c=_+o,x=m[_],V=m[c],g=m[_+1],v=m[c+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-f,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-d)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as l}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import o from\"../../geometry/Multipoint.js\";import a from\"../../geometry/Point.js\";import r from\"../../geometry/Polyline.js\";import{initializeProjection as c,project as u}from\"../../geometry/projection.js\";import{fromExtent as h,create as p,contains as m}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as f}from\"./ElevationSampler.js\";import{ElevationTile as d}from\"./ElevationTile.js\";import{TileKey as y}from\"./TileKey.js\";class T{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const l=v.fromGeometry(i);let s=!1;n&&n.returnSampleInfo||(s=!0);const o={...R,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof v)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const l={...R,...n},s=new x(e,i.spatialReference,l),o=l.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(s,i,o),await this._selectTiles(s,o),await this._populateElevationTiles(s,o),this._sampleGeometryWithElevation(s),this._createQueryResult(s,o)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n};return this._createSampler(e,i,l)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],i,l);return this._createSamplerAllContinue(e,i,s,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,o=e.tileInfo.spatialReference;s.equals(o)||(await c([{source:s,dest:o}],{signal:l}),t=u(t,o));const a=new _(e,t,i,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new f(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.filter((e=>!e.tile.hasNoDataValues)).map((e=>h(e.extent))),s=await this._createSampler(e[e.length-1],t,n,l);if(0===s.samplers.length)return i;const o=i.samplers.concat(s.samplers),a=new f(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const l=e.pop(),s=t.geometry.coordinates,o=t.sampleInfo;i(o);const a=[],r=[];for(let i=0;i<s.length;i++){const t=o[i];t.demResolution>=0?t.source||(t.source=l):e.length&&(a.push(s[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{s[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _createQueryResult(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const l={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),l}async _createGeometryDescriptor(e,i,n){let l;const s=e.layer.tileInfo.spatialReference;if(i instanceof v?l=await i.project(s,n):(await c([{source:i.spatialReference,dest:s}],{signal:n}),l=u(i,s)),!l)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=v.fromGeometry(l)}async _selectTiles(e,i){\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e);const n=e.options.demResolution;if(\"number\"==typeof n)this._selectTilesClosestResolution(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/s(i.spatialReference),o=q(i,n);let a=o[0],r=0;for(let s=1;s<o.length;s++){const e=o[s];Math.abs(e.resolution-l)<Math.abs(a.resolution-l)&&(a=e,r=s)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=E(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,i,s){const o=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=o.tilemapCache,r=e.getTilesToFetch();try{if(a&&!I(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},s=e.options.cache,o=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${o}`,a=null!=s?s.get(n):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:o,signal:t});null!=s&&s.put(n,r),l[i.id]=new d(i,r)}));await n(Promise.allSettled(a),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||I(s))return this._selectTilesAutoPrefetchUpsample(t,i);const o=t.getTilesToFetch(),a={},r=o.map((async t=>{const n=new y(null,0,0,0,p()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await n(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},s=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,s);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(s(n),t.upsampleTile(n)&&(o=!0),l(n))}),s),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=E(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=s(t.spatialReference);return e.geometry.coordinates.map((n=>{let l=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){l=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:l}}))}}class v{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new v;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new o({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=u(i,e);if(!n)return null;const l=this.coordinates.map(((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i})),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new v;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof v)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new w(i.x,i.y,i.z,i.m)]:n?[new w(i.x,i.y,i.z)]:l?[new w(i.x,i.y,null,i.m)]:[new w(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((e=>new w(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new w(e[0],e[1],e[2]))):l?i.points.map((e=>new w(e[0],e[1],null,e[2]))):i.points.map((e=>new w(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new o({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatialReference:i}):new o(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],l=[],{hasZ:s,hasM:o}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,s&&o)for(const t of e)n.push(new w(t[0],t[1],t[2],t[3]));else if(s)for(const t of e)n.push(new w(t[0],t[1],t[2]));else if(o)for(const t of e)n.push(new w(t[0],t[1],null,t[2]));else for(const t of e)n.push(new w(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),s=l.map((e=>n.slice(e[0],e[1])));return new r({paths:s,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class w{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new w(this.x,this.y,this.z,this.m)}}class g{constructor(e,t){this.layer=e,this.options=t}}class x extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class _ extends g{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let s=n.length-1;s>=0;s--){const i=n[s],o=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(l.width/o)*Math.ceil(l.height/a)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,n.push(s)):t&&t(s)}const l=n.sort(((e,t)=>e.level-t.level));return l.filter(((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&m(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=q(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),o=s.extent;if(null==o)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new y(null,s.level,s.row-h,s.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&m(t,e.extent)))}}function E(e,t,i=0){const n=q(e,t);let l=n.length-1;if(i>0){const t=i/s(e.spatialReference),o=n.findIndex((e=>e.resolution<t));0===o?l=0:o>0&&(l=o-1)}return l}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};function q(e,t){const i=e.lods;if(I(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}function I(e){return null!=e?.tileInfo}export{T as ElevationQuery,v as GeometryDescriptor,E as getFinestLodIndex};\n"],"names":["t","constructor","l","arguments","length","undefined","this","tile","e","extent","_samplerData","a","zmin","data","minValue","zmax","maxValue","hasNoDataValues","sample","safeWidth","s","dx","r","dy","n","y1","i","x0","u","width","o","values","m","noDataValue","h","p","D","d","Math","floor","f","_","c","x","V","g","v","T","queryAll","ignoreInvisibleLayers","filter","visible","slice","fromGeometry","returnSampleInfo","R","query","_queryAllContinue","geometry","export","sampleInfo","type","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","createSampler","_createSampler","createSamplerAll","_createSamplerAllContinue","tileInfo","equals","source","dest","elevationTiles","layer","options","pop","samplers","map","concat","coordinates","demResolution","push","clone","Error","forEach","z","project","outSpatialReference","_extractSampleInfo","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","fullExtent","outsideExtentTile","y","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","tilemapCache","q","abs","resolution","E","minDemResolution","_selectTilesFinestContiguousAt","getTilesToFetch","I","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","async","id","uid","get","fetchTile","put","allSettled","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","points","hasZ","hasM","w","paths","super","tileAt","some","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","height","clear","add","_uniqueNonOverlappingTiles","has","sort","updateTileInfo","_tileIsMasked","findIndex","lods","effectiveMinLOD","effectiveMaxLOD"],"sourceRoot":""}