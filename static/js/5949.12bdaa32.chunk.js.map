{"version":3,"file":"static/js/5949.12bdaa32.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts","../node_modules/src/.internal/charts/xy/XYChart.ts","../node_modules/src/.internal/charts/xy/axes/Axis.ts","../node_modules/src/.internal/charts/xy/axes/AxisTick.ts","../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts","../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/xy/axes/Grid.ts","../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts","../node_modules/src/.internal/charts/xy/series/XYSeries.ts","../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts","../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts","../node_modules/src/.internal/core/render/Bullet.ts","../node_modules/src/.internal/core/render/Button.ts"],"sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(event.point);\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\n\t/**\n\t * @todo review\n\t * You can prevent axis to be zoomed if this is false.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\t\t\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\t\t\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?:boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif(!this.getPrivate(\"doNotUpdateLegend\")){\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * If a field will be set, the bullet will be located at exact value of that field, not paying atention to locationY/locationX. Works with XYSeries\tonly.\n\t * If `field` is set, bullet will be placed at the specific data value, ignoring\n\t * any `locationX` and `locationY` settings.\n\t *\n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#By_data_field} for more info\n\t * @since 5.6.0\n\t */\n\tfield?: \"open\" | \"high\" | \"low\" | \"value\";\n\n\t/**\n\t * If set, will stack bullets instead of overlapping them.\n\t *\n\t * * `\"up` - stacks bullets upwards.\n\t * * `\"down` - stacks bullets downwards.\n\t * * `\"auto` - stacks bullets in the direction that offers more space.\n\t * \n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Stacked_bullets} for more info\n\t * @since 5.6.0\n\t */\n\tstacked?: \"up\" | \"down\" | \"auto\";\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?: boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["XYChartDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","new","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","saturation","fillOpacity","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","p100","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","moveThreshold","strokeDasharray","ariaLabel","translate","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","p50","crisp","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","$type","setPrivate","gridIntervals","timeUnit","count","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","$array","$object","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","gridInterval","min","$time","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","round","baseValue","logarithmic","autoZoom","step","$math","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYChart","SerialChart","constructor","Object","defineProperty","ListAutoDispose","chartContainer","children","push","Container","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","Button","themeTags","icon","Graphics","x","y","_afterNew","_defaultThemes","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","Rectangle","fill","Color","fromHex","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","$utils","preventDefault","plotPoint","toLocal","point","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","dataItems","isHidden","isHiding","startIndex","endIndex","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","showDataItemTooltip","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","colorSet","color","next","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","oldValue","Error","moveValue","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","_handleAxisSelection","force","indexOf","setRaw","updateGrips","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","sort","a","b","$order","prevY","Percent","top","bottom","_fy","reverse","prevBottom","bounds","classNames","concat","className","Axis","Component","List","background","_dispose","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","DataItem","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","duration","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","to","easing","animate","key","once","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","m","remove","_a","labels","_b","makeGrid","_c","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisTick","Tick","AxisLabel","Label","AxisRenderer","ListTemplate","Template","_new","template","Grid","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","_settings","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","MultiDisposer","someDirty","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_baseValue","_formatText","numberFormat","formatter","getNumberFormatter","format","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","minorLabelsEnabled","minorGridEnabled","stepPower","floor","stepAdjusted","minorGridCount","minorStep","_dataItems","processDataItem","nextValue","minorValue","_adjustMinMax","minorDataItem","minorDataItems","minorLabel","decCount","j","inited","valueToPosition","fillEndPosition","labelEndPosition","labelEndValue","hasTag","positionToValue","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","getDataItemCoordinateX","field","_cellLocation","axisLocation","getDataItemPositionX","getStackedXValueWorking","getDataItemCoordinateY","getDataItemPositionY","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","len","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","Number","MAX_VALUE","maxCount","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","fieldName","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","XYSeries","Series","fields","valueFields","_setRawDefault","_removeAxisRange","_makeFieldNames","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","baseAxis","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","_tooltipFieldX","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_stackDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mainContainer","mask","_updateChildren","_x","_y","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_axesDirty","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","getPoint","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","setDataSet","id","_dataSets","_handleDataSetChange","_dataSetId","resetGrouping","dataSet","_mainDataItems","mainDataItems","bullets","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","_isHiding","_valueFields","waitForStop","_markDirtyStack","stackedSeries","_skipped","hideTooltip","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","markDirtyText","_getTooltipTarget","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_shouldInclude","_position","resetExtremes","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","markerRectangle","ds","visualSettings","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","close","previousClose","apply","list","lastDataItem","column","ColumnSeries","RoundedRectangle","Bullet","Entity","_afterNewApplyThemes"],"sourceRoot":""}