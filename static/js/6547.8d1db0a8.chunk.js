"use strict";(self.webpackChunkn2_compile=self.webpackChunkn2_compile||[]).push([[6547],{56547:(t,e,r)=>{r.r(e),r.d(e,{default:()=>d});var a=r(63780),n=r(18722),u=r(68700),o=r(50894),f=r(32035),i=r(93311),s=r(78952),l=r(50628),b=r(74432),c=r(89414);class p{transform(t){const e=this._transform(t),r=[e.points.buffer,e.rgb.buffer];null!=e.pointIdFilterMap&&r.push(e.pointIdFilterMap.buffer);for(const a of e.attributes)"buffer"in a.values&&(0,n.eP)(a.values.buffer)&&a.values.buffer!==e.rgb.buffer&&r.push(a.values.buffer);return Promise.resolve({result:e,transferList:r})}_transform(t){const e=(0,b.Ym)(t.schema,t.geometryBuffer);let r=e.length/3,n=null;const u=new Array,o=(0,b.dH)(t.primaryAttributeData,e,r);null!=t.primaryAttributeData&&o&&u.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:o});const f=(0,b.dH)(t.modulationAttributeData,e,r);null!=t.modulationAttributeData&&f&&u.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:f});let i=(0,b.aE)(t.rendererInfo,o,f,r);if(t.filterInfo&&t.filterInfo.length>0&&null!=t.filterAttributesData){const o=t.filterAttributesData.filter(a.pC).map((t=>{const a=(0,b.dH)(t,e,r),n={attributeInfo:t.attributeInfo,values:a};return u.push(n),n}));n=new Uint32Array(r),r=(0,b.hv)(e,i,n,t.filterInfo,o)}for(const a of t.userAttributesData){const t=(0,b.dH)(a,e,r);u.push({attributeInfo:a.attributeInfo,values:t})}3*r<i.length&&(i=new Uint8Array(i.buffer.slice(0,3*r))),function(t,e,r){if(0!==r)for(let a=0;a<e;a++)t[3*a+2]+=r}(e,r,t.elevationOffset);const l=h(e,r,c.Oo.fromData(t.obbData),s.Z.fromJSON(t.inSR),s.Z.fromJSON(t.outSR));return{obbData:t.obbData,points:l,rgb:i,attributes:u,pointIdFilterMap:n}}}function h(t,e,r,a,n){if(!(0,l.projectBuffer)(t,a,0,t,n,0,e))throw new Error("Can't reproject");const o=(0,i.d9)(r.center),s=(0,i.Ue)(),b=(0,i.Ue)(),c=(0,i.d9)(r.halfSize);(0,u.Kx)(m,r.quaternion);const p=new Float32Array(3*e);for(let u=0;u<e;u++){let e=3*u;s[0]=t[e]-o[0],s[1]=t[e+1]-o[1],s[2]=t[e+2]-o[2],(0,f.u)(b,s,m),c[0]=Math.max(c[0],Math.abs(b[0])),c[1]=Math.max(c[1],Math.abs(b[1])),c[2]=Math.max(c[2],Math.abs(b[2])),p[e++]=s[0],p[e++]=s[1],p[e]=s[2]}return r.halfSize=c,p}const m=(0,o.Ue)();function d(){return new p}}}]);
//# sourceMappingURL=6547.8d1db0a8.chunk.js.map